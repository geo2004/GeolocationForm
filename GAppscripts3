const sheetName = 'Form2';
const scriptProp = PropertiesService.getScriptProperties();
const folderName = 'form_images';

function initialSetup () {
  const activeSpreadsheet = SpreadsheetApp.getActiveSpreadsheet();
  scriptProp.setProperty('key', activeSpreadsheet.getId());
}

function doPost (event) {
  const lock = LockService.getScriptLock();
  lock.tryLock(10000);

  try {
    const doc = SpreadsheetApp.openById(scriptProp.getProperty('key'));
    const sheet = doc.getSheetByName(sheetName);

    const headers = sheet.getRange(1, 1, 1, sheet.getLastColumn()).getValues()[0];
    const nextRow = sheet.getLastRow() + 1;

    const newRow = headers.map(function(header) {
      if (header === 'File URL') {
        const fileBlob = event.parameter['file'];
        if (fileBlob) {
          const fileUrl = uploadFile(fileBlob);
          return fileUrl;
        } else {
          console.error('No file found in request.');
          return '';
        }
      } else {
        return header === 'Date' ? new Date() : event.parameter[header];
      }
    });

    sheet.getRange(nextRow, 1, 1, newRow.length).setValues([newRow]);

    return ContentService
      .createTextOutput(JSON.stringify({ 'result': 'success', 'row': nextRow }))
      .setMimeType(ContentService.MimeType.JSON);
  }

  catch (error) {
    console.error(error);
    return ContentService
      .createTextOutput(JSON.stringify({ 'result': 'error', 'error': error }))
      .setMimeType(ContentService.MimeType.JSON);
  }

  finally {
    lock.releaseLock();
  }
}

function uploadFile (fileBlob) {
  const drive = DriveApp;
  const folder = getOrCreateFolder(folderName);
  const file = folder.createFile(fileBlob);

  Logger.log('Uploaded file: ' + file.getName() + ', URL: ' + file.getUrl());

  return file.getUrl();
}

function getOrCreateFolder(folderName) {
  const rootFolder = DriveApp.getRootFolder();
  let folder = rootFolder.getFoldersByName(folderName).next();
  if (!folder) {
    folder = rootFolder.createFolder(folderName);
  }
  return folder;
}
